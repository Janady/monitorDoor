apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
//    sourceSets {
//        main {
//            jniLibs.srcDirs = ['libs']
//        }
//
//        // Move the tests to tests/java, tests/res, etc...
//        androidTest.setRoot('tests')
//
//        // Move the build types to build-types/<type>
//        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
//        // This moves them out of them default location under src/<type>/... which would
//        // conflict with src/ being used by the main source set.
//        // Adding new build types or product flavors should be accompanied
//        // by a similar customization.
//        debug.setRoot('build-types/debug')
//        release.setRoot('build-types/release')
//    }
    defaultConfig {
        applicationId "com.example.funsdkdemo"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_TOOLCHAIN=clang", "-DANDROID_PLATFORM=android-21"
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
        ndk {
            abiFilters "armeabi"
        }
    }
    buildTypes {
        debug {
            debuggable = true
            jniDebuggable = true
            minifyEnabled = false
            zipAlignEnabled = false
            multiDexEnabled true
        }
        release {
            debuggable = false
            jniDebuggable = false
            minifyEnabled = false
            zipAlignEnabled = true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    useLibrary 'org.apache.http.legacy'
//    dexOptions {
//        jumboMode true
//        javaMaxHeapSize "4g"
//    }
    configurations.all {
        resolutionStrategy.eachDependency { details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }
    buildToolsVersion '28.0.3'

    lintOptions {
        abortOnError false
    }
}
dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    //implementation (name:'libxmfunsdk-release', ext: 'aar')
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.qmuiteam:qmui:1.4.0'
    implementation 'com.qmuiteam:arch:0.6.0'
    implementation files('libs/lite-orm-1.9.2.jar')
    // easylink
    implementation 'io.fogcloud.sdk:easylinkv3:0.2.6'
    //implementation 'ru.alexbykov:nopermission:1.1.2'
}
